name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # This triggers the workflow when changes are pushed to the 'main' branch
  pull_request:
    branches:
      - main  # This triggers the workflow when a PR is opened against 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

<<<<<<< HEAD
      # Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-flask-app:$GITHUB_SHA .
          
      # Push the Docker image to Docker Hub
      - name: Push the Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-flask-app:$GITHUB_SHA
=======
      - name: Install system dependencies (Poppler)
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          export PATH="/usr/bin:$PATH"  # Add Poppler to PATH within the virtual environment

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Install system dependencies (Poppler)
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E0FDB4CD49084B54813EEB325B37A2B0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_EFE13CE6246A4C21B8A926AE54D28B56 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1AA06DCBA92E49AE98D6A4ABDC16E050 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'DocuementApi'
          slot-name: 'Production'
>>>>>>> 9985c8dfd4964d2445e0aeec3bf8d4ed07ac2026
